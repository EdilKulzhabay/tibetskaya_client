# Инструкция по созданию IPA файла для iOS

## 1. Подготовка к сборке

### Установка зависимостей
```bash
cd ios
pod install
cd ..
```

### Очистка кэша (если нужно)
```bash
# Очистка React Native кэша
npx react-native start --reset-cache

# Очистка iOS кэша
rm -rf ios/build
rm -rf ~/Library/Developer/Xcode/DerivedData/tibetskayaClientApp-*
```

## 2. Настройка проекта в Xcode

### Открытие проекта
```bash
open ios/tibetskayaClientApp.xcworkspace
```

### Настройки в Xcode:
1. **Выберите проект** → tibetskayaClientApp
2. **General tab:**
   - Bundle Identifier: `com.tibetskayaclientapp` (или ваш уникальный ID)
   - Version: `1.0`
   - Build: `1`
   - Display Name: `Tibetskaya Client`

3. **Signing & Capabilities:**
   - Team: Выберите вашу команду разработчика
   - Bundle Identifier: Должен быть уникальным

## 3. Создание архива (Archive)

### Через Xcode:
1. Выберите **Any iOS Device (arm64)** в схеме
2. **Product** → **Archive**
3. Дождитесь завершения архивирования

### Через командную строку:
```bash
# Сборка для Release
npx react-native run-ios --configuration Release

# Создание архива
xcodebuild -workspace ios/tibetskayaClientApp.xcworkspace \
           -scheme tibetskayaClientApp \
           -configuration Release \
           -destination generic/platform=iOS \
           -archivePath ios/build/tibetskayaClientApp.xcarchive \
           archive
```

## 4. Экспорт IPA файла

### Через Xcode Organizer:
1. **Window** → **Organizer**
2. Выберите ваш архив
3. **Distribute App**
4. **App Store Connect** (для публикации) или **Ad Hoc** (для тестирования)
5. Следуйте инструкциям мастера

### Через командную строку:
```bash
# Создание ExportOptions.plist (если его нет)
cat > ios/ExportOptions.plist << EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>method</key>
    <string>app-store</string>
    <key>teamID</key>
    <string>YOUR_TEAM_ID</string>
    <key>uploadBitcode</key>
    <false/>
    <key>uploadSymbols</key>
    <true/>
    <key>compileBitcode</key>
    <false/>
</dict>
</plist>
EOF

# Экспорт IPA
xcodebuild -exportArchive \
           -archivePath ios/build/tibetskayaClientApp.xcarchive \
           -exportPath ios/build \
           -exportOptionsPlist ios/ExportOptions.plist
```

## 5. Типы распространения

### App Store (для публикации):
- Требует Apple Developer Account ($99/год)
- Нужен App Store Connect аккаунт
- Проходит ревью Apple

### Ad Hoc (для тестирования):
- До 100 устройств
- Нужны UDID устройств
- Не требует ревью

### Enterprise (для корпоративного использования):
- Требует Enterprise Developer Account ($299/год)
- Неограниченное количество устройств
- Внутреннее распространение

## 6. Полезные команды

### Проверка сертификатов:
```bash
security find-identity -v -p codesigning
```

### Очистка ключей:
```bash
rm -rf ~/Library/MobileDevice/Provisioning\ Profiles/*
```

### Проверка IPA файла:
```bash
unzip -l path/to/your/app.ipa
```

## 7. Решение проблем

### Ошибка кодирования:
- Проверьте сертификаты в Keychain Access
- Обновите Provisioning Profiles

### Ошибка Bundle Identifier:
- Убедитесь, что ID уникальный
- Проверьте настройки в App Store Connect

### Ошибка архивирования:
- Очистите DerivedData
- Перезапустите Xcode
- Проверьте версию Xcode

## 8. Финальная проверка

После создания IPA файла:
1. Проверьте размер файла
2. Протестируйте на реальном устройстве
3. Убедитесь, что все функции работают
4. Проверьте производительность

## Примечания:
- IPA файл будет создан в папке `ios/build/`
- Размер файла обычно 50-200 MB
- Время сборки зависит от мощности компьютера (5-15 минут)
